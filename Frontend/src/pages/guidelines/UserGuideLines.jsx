import React, { useState } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import { ArrowLeft } from 'lucide-react';
// English content
const contentEn = {
  title: 'Auction Page Guide',
  sections: [
    {
      title: 'Summary Stats',
      items: [
        {
          label: 'Last Sold Player',
          description:
            'Shows the name, role, base price, and final winning bid of the player just sold.',
        },
        {
          label: 'Top Bid Player',
          description:
            'Displays the player with the highest bid so far and the bidder‚Äôs team.',
        },
        {
          label: 'Player Card',
          description:
            'Tap a player‚Äôs name or avatar to see age, stats, recent form, and base price.',
        },
      ],
    },
    {
      title: 'Bidding Panel',
      items: [
        {
          label: 'Player List',
          description:
            'Scroll through all available players. Sold ones are greyed out, unsold remain active.',
        },
        {
          label: 'Bid Now Button',
          description:
            'Tap once to place your bid at the current Next Price. First tap wins and the bid is placed instantly.',
        },
        {
          label: 'Next Price',
          description:
            'Calculated as current highest bid plus the minimum increment.',
        },
        {
          label: 'Current Highest Bid',
          description:
            'Live display of the top bid and bidder‚Äôs team name.',
        },
        {
          label: 'RTM Option',
          description:
            'Right To Match lets you match another team‚Äôs final bid for a released player (admin approval required).',
        },
      ],
    },
    {
      title: 'Team Panel',
      items: [
        {
          label: 'Team Balance',
          description:
            'Your remaining budget; reduced immediately when you tap Bid Now.',
        },
        {
          label: 'Roster Summary',
          description:
            'Shows counts of batsmen, bowlers, and all-rounders in your squad.',
        },
        {
          label: 'Bid History',
          description:
            'Your last three bids, with timestamps and amounts.',
        },
        {
          label: 'Avatar & Emotes',
          description:
            'Your avatar and emote buttons to react during live bidding.',
        },
      ],
    },
  ],
  instructions: [
    'Tap ‚ÄúBid Now‚Äù once. Your bid is placed immediately at the Next Price‚Äîfirst tap wins.',
    'Next Price updates automatically after each bid.',
    'You cannot bid twice in a row; bids must alternate between teams.',
    'Current Highest Bid shows the live leader and amount.',
    'Tap RTM on a released player to match their final bid (admin approval required).',
  ],
};

// Hindi content
const contentHi = {
  title: '‡§®‡•Ä‡§≤‡§æ‡§Æ‡•Ä ‡§™‡•á‡§ú ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§ø‡§ï‡§æ',
  sections: [
    {
      title: '‡§∏‡§æ‡§∞‡§æ‡§Ç‡§∂ ‡§Ü‡§Å‡§ï‡§°‡§º‡•á',
      items: [
        {
          label: '‡§Ü‡§ñ‡§ø‡§∞‡•Ä ‡§¨‡§ø‡§ï‡•á ‡§ñ‡§ø‡§≤‡§æ‡§°‡§º‡•Ä',
          description:
            '‡§Ö‡§≠‡•Ä-‡§Ö‡§≠‡•Ä ‡§¨‡§ø‡§ï‡•á ‡§ñ‡§ø‡§≤‡§æ‡§°‡§º‡•Ä ‡§ï‡§æ ‡§®‡§æ‡§Æ, ‡§≠‡•Ç‡§Æ‡§ø‡§ï‡§æ, ‡§Ü‡§ß‡§æ‡§∞ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§î‡§∞ ‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§¨‡•ã‡§≤‡•Ä ‡§¶‡§ø‡§ñ‡§æ‡§§‡§æ ‡§π‡•à‡•§',
        },
        {
          label: '‡§∂‡•Ä‡§∞‡•ç‡§∑ ‡§¨‡•ã‡§≤‡•Ä ‡§ñ‡§ø‡§≤‡§æ‡§°‡§º‡•Ä',
          description:
            '‡§Ö‡§¨ ‡§§‡§ï ‡§ï‡•Ä ‡§∏‡§¨‡§∏‡•á ‡§ä‡§Å‡§ö‡•Ä ‡§¨‡•ã‡§≤‡•Ä ‡§î‡§∞ ‡§¨‡•ã‡§≤‡•Ä ‡§≤‡§ó‡§æ‡§®‡•á ‡§µ‡§æ‡§≤‡•Ä ‡§ü‡•Ä‡§Æ ‡§¶‡§ø‡§ñ‡§æ‡§§‡§æ ‡§π‡•à‡•§',
        },
        {
          label: '‡§ñ‡§ø‡§≤‡§æ‡§°‡§º‡•Ä ‡§ï‡§æ‡§∞‡•ç‡§°',
          description:
            '‡§ñ‡§ø‡§≤‡§æ‡§°‡§º‡•Ä ‡§ï‡•á ‡§®‡§æ‡§Æ ‡§Ø‡§æ ‡§Ö‡§µ‡§§‡§æ‡§∞ ‡§™‡§∞ ‡§ü‡•à‡§™ ‡§ï‡§∞‡§ï‡•á ‡§Ü‡§Ø‡•Å, ‡§Ü‡§Å‡§ï‡§°‡§º‡•á ‡§î‡§∞ ‡§Ü‡§ß‡§æ‡§∞ ‡§Æ‡•Ç‡§≤‡•ç‡§Ø ‡§¶‡•á‡§ñ‡•á‡§Ç‡•§',
        },
      ],
    },
    {
      title: '‡§¨‡§ø‡§°‡§ø‡§Ç‡§ó ‡§™‡•à‡§®‡§≤',
      items: [
        {
          label: '‡§ñ‡§ø‡§≤‡§æ‡§°‡§º‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§∏‡•Ç‡§ö‡•Ä',
          description:
            '‡§∏‡§≠‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß ‡§ñ‡§ø‡§≤‡§æ‡§°‡§º‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§≤‡§ø‡§∏‡•ç‡§ü ‡§∏‡•ç‡§ï‡•ç‡§∞‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§¨‡§ø‡§ï‡•á ‡§ñ‡§ø‡§≤‡§æ‡§°‡§º‡•Ä ‡§ó‡•ç‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§¶‡§ø‡§ñ‡•á‡§Ç‡§ó‡•á; ‡§Ö‡§µ‡§ø‡§ï‡•á ‡§ü‡•à‡§™‡•á‡§¨‡§≤ ‡§π‡•ã‡§Ç‡§ó‡•á‡•§',
        },
        {
          label: '‡§¨‡§ø‡§° ‡§®‡§æ‡§â ‡§¨‡§ü‡§®',
          description:
            '‡§Ö‡§ó‡§≤‡•Ä ‡§ï‡•Ä‡§Æ‡§§ ‡§™‡§∞ ‡§¨‡•ã‡§≤‡•Ä ‡§≤‡§ó‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï ‡§¨‡§æ‡§∞ ‡§ü‡•à‡§™ ‡§ï‡§∞‡•á‡§Ç‚Äî‡§™‡§π‡§≤‡§æ ‡§ü‡•à‡§™ ‡§ú‡•Ä‡§§‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§¨‡•ã‡§≤‡•Ä ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§≤‡§ó ‡§ú‡§æ‡§§‡•Ä ‡§π‡•à‡•§',
        },
        {
          label: '‡§Ö‡§ó‡§≤‡•Ä ‡§ï‡•Ä‡§Æ‡§§',
          description:
            '‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§∂‡•Ä‡§∞‡•ç‡§∑ ‡§¨‡•ã‡§≤‡•Ä ‡§Æ‡•á‡§Ç ‡§®‡•ç‡§Ø‡•Ç‡§®‡§§‡§Æ ‡§µ‡•É‡§¶‡•ç‡§ß‡§ø ‡§ú‡•ã‡§°‡§º‡§ï‡§∞ ‡§ë‡§ü‡•ã‡§Æ‡•à‡§ü‡§ø‡§ï ‡§¨‡§®‡•á‡§ó‡•Ä‡•§',
        },
        {
          label: '‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§â‡§ö‡•ç‡§ö‡§§‡§Æ ‡§¨‡•ã‡§≤‡•Ä',
          description:
            '‡§≤‡§æ‡§á‡§® ‡§Æ‡•á‡§Ç ‡§∏‡§¨‡§∏‡•á ‡§ä‡§Å‡§ö‡•Ä ‡§¨‡•ã‡§≤‡•Ä ‡§î‡§∞ ‡§ü‡•Ä‡§Æ ‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§≤‡§æ‡§á‡§µ ‡§¶‡§ø‡§ñ‡§æ‡§§‡§æ ‡§π‡•à‡•§',
        },
        {
          label: 'RTM ‡§µ‡§ø‡§ï‡§≤‡•ç‡§™',
          description:
            '‡§∞‡§æ‡§á‡§ü ‡§ü‡•Ç ‡§Æ‡•à‡§ö ‡§∏‡•á ‡§Ü‡§™ ‡§∞‡§ø‡§≤‡•Ä‡§ú‡§º ‡§ñ‡§ø‡§≤‡§æ‡§°‡§º‡•Ä ‡§ï‡•Ä ‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§¨‡•ã‡§≤‡•Ä ‡§Æ‡•à‡§ö ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç (‡§è‡§°‡§Æ‡§ø‡§® ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï)‡•§',
        },
      ],
    },
    {
      title: '‡§ü‡•Ä‡§Æ ‡§™‡•à‡§®‡§≤',
      items: [
        {
          label: '‡§¨‡•à‡§≤‡•á‡§Ç‡§∏',
          description:
            '‡§Ü‡§™‡§ï‡•Ä ‡§¨‡§ö‡•Ä ‡§π‡•Å‡§à ‡§¨‡§ú‡§ü; ‚Äú‡§¨‡§ø‡§° ‡§®‡§æ‡§â‚Äù ‡§ü‡•à‡§™ ‡§ï‡§∞‡§§‡•á ‡§π‡•Ä ‡§ò‡§ü ‡§ú‡§æ‡§è‡§ó‡•Ä‡•§',
        },
        {
          label: '‡§∞‡•â‡§∏‡•ç‡§ü‡§∞ ‡§∏‡§æ‡§∞‡§æ‡§Ç‡§∂',
          description:
            '‡§¨‡§≤‡•ç‡§≤‡•á‡§¨‡§æ‡§ú, ‡§ó‡•á‡§Ç‡§¶‡§¨‡§æ‡§ú ‡§î‡§∞ ‡§ë‡§≤-‡§∞‡§æ‡§â‡§Ç‡§°‡§∞‡•ç‡§∏ ‡§ï‡•Ä ‡§∏‡§Ç‡§ñ‡•ç‡§Ø‡§æ ‡§¶‡§ø‡§ñ‡§æ‡§§‡§æ ‡§π‡•à‡•§',
        },
        {
          label: '‡§¨‡•ã‡§≤‡•Ä ‡§á‡§§‡§ø‡§π‡§æ‡§∏',
          description:
            '‡§™‡§ø‡§õ‡§≤‡•Ä ‡§§‡•Ä‡§® ‡§¨‡•ã‡§≤‡§ø‡§Ø‡§æ‡§Å, ‡§∏‡§Æ‡§Ø ‡§î‡§∞ ‡§∞‡§æ‡§∂‡§ø ‡§ï‡•á ‡§∏‡§æ‡§•‡•§',
        },
        {
          label: '‡§Ö‡§µ‡§§‡§æ‡§∞ ‡§î‡§∞ ‡§á‡§Æ‡•ã‡§ü‡•ç‡§∏',
          description:
            '‡§Ü‡§™‡§ï‡§æ ‡§Ö‡§µ‡§§‡§æ‡§∞ ‡§î‡§∞ ‡§á‡§Æ‡•ã‡§ü ‡§¨‡§ü‡§® ‡§≤‡§æ‡§á‡§µ ‡§®‡•Ä‡§≤‡§æ‡§Æ‡•Ä ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§§‡§ø‡§ï‡•ç‡§∞‡§ø‡§Ø‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è‡•§',
        },
      ],
    },
  ],
  instructions: [
    '‚Äú‡§¨‡§ø‡§° ‡§®‡§æ‡§â‚Äù ‡§™‡§∞ ‡§è‡§ï ‡§¨‡§æ‡§∞ ‡§ü‡•à‡§™ ‡§ï‡§∞‡•á‡§Ç‚Äî‡§™‡§π‡§≤‡§æ ‡§ü‡•à‡§™ ‡§ú‡•Ä‡§§‡§§‡§æ ‡§π‡•à ‡§î‡§∞ ‡§¨‡•ã‡§≤‡•Ä ‡§§‡•Å‡§∞‡§Ç‡§§ ‡§≤‡§ó ‡§ú‡§æ‡§§‡•Ä ‡§π‡•à‡•§',
    '‡§π‡§∞ ‡§¨‡•ã‡§≤‡•Ä ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§Ö‡§ó‡§≤‡•Ä ‡§ï‡•Ä‡§Æ‡§§ ‡§ë‡§ü‡•ã‡§Æ‡•à‡§ü‡§ø‡§ï ‡§Ö‡§™‡§°‡•á‡§ü ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡•§',
    '‡§Ü‡§™ ‡§≤‡§ó‡§æ‡§§‡§æ‡§∞ ‡§¶‡•ã ‡§¨‡§æ‡§∞ ‡§¨‡•ã‡§≤‡•Ä ‡§®‡§π‡•Ä‡§Ç ‡§≤‡§ó‡§æ ‡§∏‡§ï‡§§‡•á‚Äî‡§¨‡•ã‡§≤‡§ø‡§Ø‡§æ‡§Å ‡§ü‡•Ä‡§Æ‡•ã‡§Ç ‡§ï‡•á ‡§¨‡•Ä‡§ö ‡§¨‡§æ‡§∞‡•Ä-‡§¨‡§æ‡§∞‡•Ä ‡§∏‡•á ‡§π‡•ã‡§®‡•Ä ‡§ö‡§æ‡§π‡§ø‡§è‡•§',
    '‡§µ‡§∞‡•ç‡§§‡§Æ‡§æ‡§® ‡§â‡§ö‡•ç‡§ö‡§§‡§Æ ‡§¨‡•ã‡§≤‡•Ä ‡§≤‡§æ‡§á‡§µ ‡§®‡•á‡§§‡§æ ‡§î‡§∞ ‡§∞‡§æ‡§∂‡§ø ‡§¶‡§ø‡§ñ‡§æ‡§§‡•Ä ‡§π‡•à‡•§',
    '‡§∞‡§ø‡§≤‡•Ä‡§ú‡§º ‡§ï‡§ø‡§è ‡§ó‡§è ‡§ñ‡§ø‡§≤‡§æ‡§°‡§º‡•Ä ‡§™‡§∞ RTM ‡§ü‡•à‡§™ ‡§ï‡§∞‡•á‡§Ç ‡§§‡§æ‡§ï‡§ø ‡§â‡§®‡§ï‡•Ä ‡§Ö‡§Ç‡§§‡§ø‡§Æ ‡§¨‡•ã‡§≤‡•Ä ‡§Æ‡•à‡§ö ‡§π‡•ã ‡§∏‡§ï‡•á (‡§è‡§°‡§Æ‡§ø‡§® ‡§Ö‡§®‡•Å‡§Æ‡§§‡§ø ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï)‡•§',
  ],
};

export default function GuideLinesMultiLang() {
  const [lang, setLang] = useState('en');
  const content = lang === 'en' ? contentEn : contentHi;
  const navigate = useNavigate();
  const { id } = useParams();

  return (
    <div className="bg-blue-50 min-h-screen p-4 md:p-8 lg:p-12 text-gray-800 relative">

      {/* üîô Sticky Back Button (Visible on All Screens) */}
      <div className="sticky top-4 z-50">
        <button
          onClick={() => navigate(`/user-bidding-portal/${id}`)}
          className="flex items-center space-x-2 bg-indigo-700 hover:bg-indigo-800 text-white px-4 py-2 rounded-md shadow-md"
        >
          <ArrowLeft size={18} />
          <span className="text-sm font-medium">
            {lang === 'en' ? 'Back to Auction' : '‡§®‡•Ä‡§≤‡§æ‡§Æ‡•Ä ‡§™‡§∞ ‡§µ‡§æ‡§™‡§∏ ‡§ú‡§æ‡§è‡§Å'}
          </span>
        </button>
      </div>

      {/* üåê Language Toggle */}
      <div className="flex justify-end mt-4 mb-6">
        <button
          onClick={() => setLang('en')}
          className={`px-4 py-2 rounded-l-lg border ${
            lang === 'en' ? 'bg-blue-600 text-white' : 'bg-white text-blue-600'
          }`}
        >
          English
        </button>
        <button
          onClick={() => setLang('hi')}
          className={`px-4 py-2 rounded-r-lg border ${
            lang === 'hi' ? 'bg-blue-600 text-white' : 'bg-white text-blue-600'
          }`}
        >
          ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä
        </button>
      </div>

      {/* üè∑Ô∏è Title */}
      <h1 className="text-2xl md:text-4xl font-bold text-center text-blue-600 mb-10">
        {content.title}
      </h1>

      {/* üìå Instructions First */}
      <section className="mb-12 bg-white rounded-2xl shadow-lg p-6 md:p-8">
        <h2 className="text-2xl md:text-3xl font-semibold text-blue-700 mb-6">
          {lang === 'en' ? 'Working Instructions' : '‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§®‡§ø‡§∞‡•ç‡§¶‡•á‡§∂'}
        </h2>
        <ol className="list-decimal list-inside space-y-5 text-gray-700">
          {content.instructions.map((instr, i) => (
            <li key={i}>{instr}</li>
          ))}
        </ol>
      </section>

      {/* üß© Sections Grid */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
        {content.sections.map((sec, idx) => (
          <div
            key={idx}
            className="bg-white rounded-2xl shadow-lg p-6 hover:shadow-xl transition-shadow"
          >
            <h2 className="text-xl md:text-2xl font-semibold text-blue-700 mb-4">
              {sec.title}
            </h2>
            <ul className="space-y-4">
              {sec.items.map((item, i) => (
                <li key={i}>
                  <p className="font-medium text-gray-900">{item.label}</p>
                  <p className="text-gray-600 ml-4">{item.description}</p>
                </li>
              ))}
            </ul>
          </div>
        ))}
      </div>
    </div>
  );
}